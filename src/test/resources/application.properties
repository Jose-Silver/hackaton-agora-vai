# Datasource nomeado 'h2'
quarkus.datasource.h2.db-kind=h2
quarkus.datasource.h2.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.h2.username=sa
quarkus.datasource.h2.password=sa
quarkus.datasource.h2.jdbc.driver=org.h2.Driver
quarkus.hibernate-orm.h2.database.generation=drop-and-create
quarkus.datasource.h2.devservices=false

# Datasource para produtos (H2 em testes)
quarkus.datasource.produtos.db-kind=h2
quarkus.datasource.produtos.jdbc.url=jdbc:h2:mem:produtos;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.produtos.username=sa
quarkus.datasource.produtos.password=sa
quarkus.datasource.produtos.jdbc.driver=org.h2.Driver
quarkus.hibernate-orm.produtos.datasource=produtos
quarkus.hibernate-orm.produtos.packages=domain.entity.remote
quarkus.hibernate-orm.produtos.database.generation=drop-and-create
quarkus.hibernate-orm.produtos.sql-load-script=import.sql
quarkus.datasource.produtos.devservices=false

# Datasource padrão (opcional, caso necessário)
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#quarkus.datasource.username=sa
#quarkus.datasource.password=sa
#quarkus.datasource.jdbc.driver=org.h2.Driver
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.datasource.devservices=false
